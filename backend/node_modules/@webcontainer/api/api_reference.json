{"id":0,"name":"@webcontainer/api","kind":1,"kindString":"Project","flags":{},"comment":{"summary":[{"kind":"text","text":"The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n\nIts main entrypoint is the "},{"kind":"inline-tag","tag":"@link","text":"WebContainer","target":5},{"kind":"text","text":" class."}]},"originalName":"","children":[{"id":501,"name":"PreviewMessageType","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[{"kind":"text","text":"This type is in a separate module so that localservice can import it\nwithout bundling all the other webcontainer specific stuff."}]},"children":[{"id":504,"name":"ConsoleError","kind":16,"kindString":"Enumeration Member","flags":{},"type":{"type":"literal","value":"PREVIEW_CONSOLE_ERROR"}},{"id":502,"name":"UncaughtException","kind":16,"kindString":"Enumeration Member","flags":{},"type":{"type":"literal","value":"PREVIEW_UNCAUGHT_EXCEPTION"}},{"id":503,"name":"UnhandledRejection","kind":16,"kindString":"Enumeration Member","flags":{},"type":{"type":"literal","value":"PREVIEW_UNHANDLED_REJECTION"}}],"groups":[{"title":"Enumeration Members","children":[504,502,503]}]},{"id":5,"name":"WebContainer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The main export of this library. An instance of "},{"kind":"code","text":"`WebContainer`"},{"kind":"text","text":" represents a runtime\nready to be used."}]},"children":[{"id":22,"name":"_tornDown","kind":1024,"kindString":"Property","flags":{"isPrivate":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":20,"name":"fs","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Gives access to the underlying file system."}]},"type":{"type":"reference","id":191,"name":"FileSystemAPI"}},{"id":21,"name":"internal","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":84,"name":"WebContainerInternal"}},{"id":78,"name":"path","kind":262144,"kindString":"Accessor","flags":{},"getSignature":{"id":79,"name":"path","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The default value of the "},{"kind":"code","text":"`PATH`"},{"kind":"text","text":" environment variable for processes started through "},{"kind":"inline-tag","tag":"@link","text":"spawn","target":30},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}},{"id":80,"name":"workdir","kind":262144,"kindString":"Accessor","flags":{},"getSignature":{"id":81,"name":"workdir","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The full path to the working directory (see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemAPI","target":191},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"string"}}},{"id":23,"name":"_unsubscribeFromTokenChangedListener","kind":2048,"kindString":"Method","flags":{"isPrivate":true},"signatures":[{"id":24,"name":"_unsubscribeFromTokenChangedListener","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]},{"id":38,"name":"export","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":39,"name":"export","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Exports the provided "},{"kind":"code","text":"`path`"},{"kind":"text","text":" in the format provided."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst fileTree = await webcontainer.export('dist', { format: 'json' });\n```"}]}]},"parameters":[{"id":40,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to serialize."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":345,"name":"FileSystemTree"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":41,"name":"export","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":42,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":43,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":415,"name":"ExportOptions"},{"type":"reflection","declaration":{"id":44,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":45,"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":"json"}}],"groups":[{"title":"Properties","children":[45]}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":345,"name":"FileSystemTree"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":46,"name":"export","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":47,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":48,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":415,"name":"ExportOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":68,"name":"mount","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":69,"name":"mount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Mounts a tree of files into the filesystem. This can be specified as a tree object ("},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":345},{"kind":"text","text":")\nor as a binary snapshot generated by ["},{"kind":"code","text":"`@webcontainer/snapshot`"},{"kind":"text","text":"](https://www.npmjs.com/package/@webcontainer/snapshot)."}]},"parameters":[{"id":70,"name":"snapshotOrTree","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A tree of files, or a binary snapshot. Note that binary payloads will be transferred."}]},"type":{"type":"union","types":[{"type":"reference","name":"ArrayBuffer","qualifiedName":"ArrayBuffer","package":"typescript"},{"type":"reference","id":345,"name":"FileSystemTree"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}},{"id":71,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":72,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":73,"name":"mountPoint","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies a nested path where the tree should be mounted."}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[73]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":49,"name":"on","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":50,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`port`"},{"kind":"text","text":" events, which are emitted when a port is opened or closed by some process."}]},"parameters":[{"id":51,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"port"}},{"id":52,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":139,"name":"PortListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":53,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`server-ready`"},{"kind":"text","text":" events, emitted when a running server is listening for incoming\nconnections and ready to answer requests."}]},"parameters":[{"id":54,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"server-ready"}},{"id":55,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":145,"name":"ServerReadyListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":56,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`preview-message`"},{"kind":"text","text":" events, emitted when a preview sends a "},{"kind":"code","text":"`PreviewMessage`"},{"kind":"text","text":"."}]},"parameters":[{"id":57,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"preview-message"}},{"id":58,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":150,"name":"PreviewMessageListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":59,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`error`"},{"kind":"text","text":" events, emitted when an internal error is triggered."}]},"parameters":[{"id":60,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"error"}},{"id":61,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":154,"name":"ErrorListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":62,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`xdg-open`"},{"kind":"text","text":" events, emitted when the "},{"kind":"code","text":"`xdg-open`"},{"kind":"text","text":" command is invoked."}]},"parameters":[{"id":63,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"xdg-open"}},{"id":64,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":160,"name":"OpenListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":65,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`code`"},{"kind":"text","text":" events, emitted when the "},{"kind":"code","text":"`code`"},{"kind":"text","text":" command is invoked."}]},"parameters":[{"id":66,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"code"}},{"id":67,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":164,"name":"CodeListener"}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}}]},{"id":74,"name":"setPreviewScript","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":75,"name":"setPreviewScript","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set a custom script to be injected into all previews. When this function is called, every\nfuture page reload will contain the provided script tag on all HTML responses.\n\nNote:\n\nWhen this function resolves, every preview reloaded _after_ will have the new script.\nExisting preview have to be explicitely reloaded.\n\nTo reload a preview you can use "},{"kind":"code","text":"`reloadPreview`"},{"kind":"text","text":"."}]},"parameters":[{"id":76,"name":"scriptSrc","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Source for the script tag."}]},"type":{"type":"intrinsic","name":"string"}},{"id":77,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to define which type of script this is."}]},"type":{"type":"reference","id":393,"name":"PreviewScriptOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":30,"name":"spawn","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":31,"name":"spawn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Spawns a process."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst install = await webcontainer.spawn('npm', ['i']);\n```"}]}]},"parameters":[{"id":32,"name":"command","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The program to be executed."}]},"type":{"type":"intrinsic","name":"string"}},{"id":33,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The command-line arguments for the program."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":34,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":299,"name":"SpawnOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":285,"name":"WebContainerProcess"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":35,"name":"spawn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Spawns a process without command-line arguments."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst install = await webcontainer.spawn('yarn');\n```"}]}]},"parameters":[{"id":36,"name":"command","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The program to be executed."}]},"type":{"type":"intrinsic","name":"string"}},{"id":37,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":299,"name":"SpawnOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":285,"name":"WebContainerProcess"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":82,"name":"teardown","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":83,"name":"teardown","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\na new WebContainer instance can be obtained by calling "},{"kind":"inline-tag","tag":"@link","text":"`boot`","target":8},{"kind":"text","text":".\n\nAll entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\nafter calling this method."}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":8,"name":"boot","kind":2048,"kindString":"Method","flags":{"isStatic":true},"signatures":[{"id":9,"name":"boot","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently\n(see "},{"kind":"inline-tag","tag":"@link","text":"`teardown`","target":82},{"kind":"text","text":").\n\nBooting WebContainer is an expensive operation."}]},"parameters":[{"id":10,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":134,"name":"BootOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5,"name":"WebContainer"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Properties","children":[22,20,21]},{"title":"Accessors","children":[78,80]},{"title":"Methods","children":[23,38,68,49,74,30,82,8]}]},{"id":84,"name":"WebContainerInternal","kind":128,"kindString":"Class","flags":{},"children":[{"id":85,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":86,"name":"new WebContainerInternal","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":87,"name":"previewScript","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Exchange messages with preview scripts."}]},"type":{"type":"reference","id":310,"name":"PreviewScriptAPI"}}],"type":{"type":"reference","id":84,"name":"WebContainerInternal"}}]},{"id":89,"name":"previewScript","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Exchange messages with preview scripts."}]},"type":{"type":"reference","id":310,"name":"PreviewScriptAPI"}},{"id":100,"name":"fileSearch","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":101,"name":"fileSearch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":102,"name":"patterns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":103,"name":"cwd","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":104,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":460,"name":"FileSearchOptions"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":110,"name":"getProcesses","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":111,"name":"getProcesses","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reflection","declaration":{"id":112,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":113,"name":"pid","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[113]}]}}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":114,"name":"onProcessesRemove","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":115,"name":"onProcessesRemove","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":116,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":117,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":118,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":119,"name":"process","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":120,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":121,"name":"pid","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[121]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reflection","declaration":{"id":122,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":123,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]},{"id":124,"name":"serialize","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":125,"name":"serialize","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":126,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":127,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":261,"name":"GlobOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":131,"name":"setCORSAuthToken","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":132,"name":"setCORSAuthToken","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":133,"name":"token","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":128,"name":"setCORSProxy","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":129,"name":"setCORSProxy","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":130,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":498,"name":"ProxyOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":105,"name":"textSearch","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":106,"name":"textSearch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":107,"name":"pattern","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":108,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":469,"name":"TextSearchOptions"}],"name":"Partial","qualifiedName":"Partial","package":"typescript"}},{"id":109,"name":"onProgress","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":493,"name":"TextSearchOnProgressCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"reference","id":482,"name":"TextSearchMatch"}}],"name":"Map","qualifiedName":"Map","package":"typescript"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":91,"name":"watchPaths","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":92,"name":"watchPaths","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":93,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":176,"name":"WatchPathsOptions"}},{"id":94,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":95,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":96,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":97,"name":"events","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":185,"name":"PathWatcherEvent"}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reflection","declaration":{"id":98,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":99,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}]}],"groups":[{"title":"Constructors","children":[85]},{"title":"Properties","children":[89]},{"title":"Methods","children":[100,110,114,124,131,128,105,91]}]},{"id":348,"name":"AuthAPI","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Module to authenticate users. Once authenticated, the WebContainer instance\ncan fetch private packages to which the user has access.\n\nIf you use this module, you should call "},{"kind":"code","text":"`auth.init()`"},{"kind":"text","text":" once at application initialization time.\nIf you do server side rendering, it should be called on any page that uses the API.\n\nThe AuthAPI uses OAuth 2.0 with PKCE and reads parameters from the URL:\n\n - "},{"kind":"code","text":"`code`"},{"kind":"text","text":":  This contains the OAuth code needed to get credentials.\n - "},{"kind":"code","text":"`error`"},{"kind":"text","text":": This contains an error message if authentication fails.\n            Typically, if the user declines the authorization."}]},"children":[{"id":349,"name":"init","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":350,"name":"init","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Intialize the authentication for use in WebContainer."}]},"parameters":[{"id":351,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Options to initialize the authentication of users."}]},"type":{"type":"reference","id":381,"name":"AuthInitOptions"}}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":352,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":353,"name":"status","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"need-auth"},{"type":"literal","value":"authorized"}]}}],"groups":[{"title":"Properties","children":[353]}]}},{"type":"reference","id":385,"name":"AuthFailedError"}]}}]},{"id":359,"name":"loggedIn","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":360,"name":"loggedIn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves when the user authorized your application.\nThis promise is guaranteed to never be rejected.\n\nIf the user never authorizes or declines your application, this promise never\nresolves.\n\n### Example:\n\n"},{"kind":"code","text":"```ts\nconst instance = await WebContainer.boot();\n\n// wait until the user is logged in\nawait auth.loggedIn();\n\n// we can now fetch packages\nawait instance.spawn('npm', ['install']);\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":361,"name":"logout","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":362,"name":"logout","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Logout the user and clear any credentials that were saved locally."}]},"parameters":[{"id":363,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`ignoreRevokeError`"},{"kind":"text","text":" is set and the revocation failed, the locally-saved credentials are discarded nonetheless."}]},"type":{"type":"reflection","declaration":{"id":364,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":365,"name":"ignoreRevokeError","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[365]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":366,"name":"on","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":367,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for 'logged-out' events, which are emitted when the credentials are revoked, meaning the user needs to re-authenticate."}]},"parameters":[{"id":368,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"logged-out"}},{"id":369,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":370,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":371,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}},{"id":372,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for 'auth-failed' events, which are emitted when the user declines authorization in another tab / popup."}]},"parameters":[{"id":373,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"auth-failed"}},{"id":374,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":375,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":376,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":377,"name":"reason","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":380,"name":"description","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":379,"name":"error","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[380,379]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}}]},{"id":354,"name":"startAuthFlow","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":355,"name":"startAuthFlow","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"This starts the OAuth flow, redirecting the current page to the\nStackBlitz editor to authenticate the user."}]},"parameters":[{"id":356,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`options.popup`"},{"kind":"text","text":" is set to true, then instead of redirecting the current page, a popup is opened."}]},"type":{"type":"reflection","declaration":{"id":357,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":358,"name":"popup","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[358]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[349,359,361,366,354]}]},{"id":385,"name":"AuthFailedError","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Authentication error used when authentication fails, likely because the user refused to grant\naccess or because they don't have permission."}]},"children":[{"id":388,"name":"description","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A detailed description of the error."}]},"type":{"type":"intrinsic","name":"string"}},{"id":387,"name":"error","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A short description of the error."}]},"type":{"type":"intrinsic","name":"string"}},{"id":386,"name":"status","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":"auth-failed"}}],"groups":[{"title":"Properties","children":[388,387,386]}]},{"id":381,"name":"AuthInitOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Options provided to "},{"kind":"code","text":"`auth.init(...)`"},{"kind":"text","text":"."}]},"children":[{"id":383,"name":"clientId","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The client id for this OAuth application."}]},"type":{"type":"intrinsic","name":"string"}},{"id":382,"name":"editorOrigin","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"StackBlitz' origin."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"https://stackblitz.com"}]}]},"type":{"type":"intrinsic","name":"string"}},{"id":384,"name":"scope","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"OAuth scope."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.rfc-editor.org/rfc/rfc6749#section-3.3"}]}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[383,382,384]}]},{"id":397,"name":"BasePreviewMessage","kind":256,"kindString":"Interface","flags":{},"children":[{"id":402,"name":"hash","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":400,"name":"pathname","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":399,"name":"port","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":398,"name":"previewId","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":401,"name":"search","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[402,400,399,398,401]}]},{"id":134,"name":"BootOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":135,"name":"coep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The value of the "},{"kind":"inline-tag","tag":"@link","text":"COEP","target":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy"},{"kind":"text","text":" header\nused to load your application.\n\nChoosing 'none' will result in no cross-origin isolation headers being used. This will only work on Chromium-based\nbrowsers as long as an Origin Trial is supported.\n\nThis value is fixed the first time a WebContainer is booted, and cannot be changed in successive reboots.\n\nFor more info about cross-origin isolation, see our "},{"kind":"inline-tag","tag":"@link","text":"docs","target":"https://webcontainers.io/guides/quickstart"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"require-corp"},{"type":"literal","value":"credentialless"}]}},{"id":138,"name":"experimentalNode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to enable the experimental Node.js runtime."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":137,"name":"forwardPreviewErrors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether errors occurring in preview iframes on the current page should be forwarded\nto the parent page. Captured errors originate from:\n\n - Calls to "},{"kind":"code","text":"`console.error`"},{"kind":"text","text":"\n - Any "},{"kind":"code","text":"`unhandledrejection`"},{"kind":"text","text":" events on "},{"kind":"code","text":"`window`"},{"kind":"text","text":"\n - Any uncaught "},{"kind":"code","text":"`error`"},{"kind":"text","text":" events on "},{"kind":"code","text":"`window`"},{"kind":"text","text":"\n\nIf set to 'exceptions-only', 'console.error's are not forwarded."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"literal","value":"exceptions-only"}]}},{"id":136,"name":"workdirName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the _folder name_ for the working directory of your WebContainer instance (see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemAPI","target":191},{"kind":"text","text":").\nIf not provided, it will be auto-generated.\n\nThis is mostly a \"cosmetic\" option."}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[135,138,137,136]}]},{"id":420,"name":"CodeEvent","kind":256,"kindString":"Interface","flags":{},"children":[{"id":421,"name":"files","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":422,"name":"CodeEventFile"}}}],"groups":[{"title":"Properties","children":[421]}]},{"id":422,"name":"CodeEventFile","kind":256,"kindString":"Interface","flags":{},"children":[{"id":425,"name":"column","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"id":423,"name":"filepath","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":424,"name":"line","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[425,423,424]}]},{"id":403,"name":"ConsoleErrorMessage","kind":256,"kindString":"Interface","flags":{},"children":[{"id":405,"name":"args","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":406,"name":"stack","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":404,"name":"type","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":504,"name":"ConsoleError"}}],"groups":[{"title":"Properties","children":[405,406,404]}]},{"id":169,"name":"DirEnt","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A representation of a directory entry,\nsee "},{"kind":"inline-tag","tag":"@link","text":"the Node.js API","target":"https://nodejs.org/dist/latest-v16.x/docs/api/fs.html#class-fsdirent"},{"kind":"text","text":"."}]},"children":[{"id":170,"name":"name","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":175,"name":"T"}},{"id":173,"name":"isDirectory","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":174,"name":"isDirectory","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":171,"name":"isFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":172,"name":"isFile","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Properties","children":[170]},{"title":"Methods","children":[173,171]}],"typeParameters":[{"id":175,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}]},{"id":335,"name":"DirectoryNode","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a directory, see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":345},{"kind":"text","text":"."}]},"children":[{"id":336,"name":"directory","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":345,"name":"FileSystemTree"}}],"groups":[{"title":"Properties","children":[336]}]},{"id":415,"name":"ExportOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":418,"name":"excludes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Globbing patterns to exclude files from the export."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":416,"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The format of the export."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"json"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"json"},{"type":"literal","value":"binary"},{"type":"literal","value":"zip"}]}},{"id":417,"name":"includes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Globbing patterns to include files from within excluded folders."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[418,416,417]}]},{"id":337,"name":"FileNode","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a file, see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":345},{"kind":"text","text":"."}]},"children":[{"id":338,"name":"file","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":339,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":340,"name":"contents","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The contents of the file, either as a UTF-8 string or as raw binary."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}}],"groups":[{"title":"Properties","children":[340]}]}}}],"groups":[{"title":"Properties","children":[338]}]},{"id":460,"name":"FileSearchOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":463,"name":"excludes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":465,"name":"gitignore","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":464,"name":"globalIgnoreFiles","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":461,"name":"homeDir","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":467,"name":"ignoreSymlinks","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":462,"name":"includes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":466,"name":"requireGit","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":468,"name":"resultLimit","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[463,465,464,461,467,462,466,468]}]},{"id":191,"name":"FileSystemAPI","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Interface to interact directly with the WebContainer filesystem. Modeled after\n"},{"kind":"inline-tag","tag":"@link","text":"`fs.promises`","target":"https://nodejs.org/dist/latest-v16.x/docs/api/fs.html#promises-api"},{"kind":"text","text":" in Node.\n\nFile system operations exposed here are scoped to the working directory: a given folder predetermined at boot time.\nAll paths are resolved with respect to this working directory."}]},"children":[{"id":231,"name":"mkdir","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":232,"name":"mkdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":233,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":234,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":235,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":236,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[236]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":237,"name":"mkdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":238,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":239,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":240,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":241,"name":"recursive","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[241]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":217,"name":"readFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":218,"name":"readFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":219,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":220,"name":"encoding","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"literal","value":null}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":221,"name":"readFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":222,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":223,"name":"encoding","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":309,"name":"BufferEncoding"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":192,"name":"readdir","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":193,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":194,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":195,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"buffer"},{"type":"reflection","declaration":{"id":196,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":197,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":"buffer"}},{"id":198,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[197,198]}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":199,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":200,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":201,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"id":202,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":203,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":309,"name":"BufferEncoding"}]}},{"id":204,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"literal","value":false}}],"groups":[{"title":"Properties","children":[203,204]}]}},{"type":"reference","id":309,"name":"BufferEncoding"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":205,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":206,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":207,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":208,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":209,"name":"encoding","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":"buffer"}},{"id":210,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[209,210]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":169,"typeArguments":[{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}],"name":"DirEnt"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":211,"name":"readdir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":212,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":213,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":214,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":215,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":309,"name":"BufferEncoding"}]}},{"id":216,"name":"withFileTypes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"literal","value":true}}],"groups":[{"title":"Properties","children":[215,216]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":169,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"DirEnt"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":249,"name":"rename","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":250,"name":"rename","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":251,"name":"oldPath","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":252,"name":"newPath","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":242,"name":"rm","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":243,"name":"rm","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":244,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":245,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":246,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":247,"name":"force","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":248,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[247,248]}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":253,"name":"watch","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":254,"name":"watch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":255,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":256,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":275,"name":"FSWatchOptions"}},{"id":257,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":280,"name":"FSWatchCallback"}}],"type":{"type":"reference","id":272,"name":"IFSWatcher"}},{"id":258,"name":"watch","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":259,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":260,"name":"listener","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":280,"name":"FSWatchCallback"}}],"type":{"type":"reference","id":272,"name":"IFSWatcher"}}]},{"id":224,"name":"writeFile","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":225,"name":"writeFile","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":226,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":227,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}},{"id":228,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":229,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":230,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}}],"groups":[{"title":"Properties","children":[230]}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[231,217,192,249,242,253,224]}]},{"id":345,"name":"FileSystemTree","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A simple, tree-like structure to describe the contents of a folder to be mounted."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```\nconst tree = {\n  myproject: {\n    directory: {\n      'foo.js': {\n        file: {\n          contents: 'const x = 1;',\n        },\n      },\n      .envrc: {\n        file: {\n          contents: 'ENVIRONMENT=staging'\n        }\n      },\n    },\n  },\n  emptyFolder: {\n    directory: {}\n  },\n};\n```"}]}]},"indexSignature":{"id":346,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":347,"name":"name","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","id":335,"name":"DirectoryNode"},{"type":"reference","id":337,"name":"FileNode"},{"type":"reference","id":341,"name":"SymlinkNode"}]}}},{"id":261,"name":"GlobOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[{"kind":"text","text":"Options for serialization."}]}]},"children":[{"id":263,"name":"excludes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":270,"name":"external","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":271,"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"json"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"json"},{"type":"literal","value":"binary"},{"type":"literal","value":"zip"},{"type":"literal","value":"pretty"}]}},{"id":264,"name":"homeDir","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":268,"name":"ignoreSymlinks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":269,"name":"includeTimestamps","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":262,"name":"includes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":266,"name":"requireGit","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":265,"name":"useGitignore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":267,"name":"useGlobalGitignore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[263,270,271,264,268,269,262,266,265,267]}]},{"id":272,"name":"IFSWatcher","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Interface for manipulating watching."}]},"children":[{"id":273,"name":"close","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":274,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[273]}]},{"id":185,"name":"PathWatcherEvent","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":189,"name":"buffer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}},{"id":190,"name":"ino","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":188,"name":"mtime","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":187,"name":"path","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":186,"name":"type","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"change"},{"type":"literal","value":"add_file"},{"type":"literal","value":"remove_file"},{"type":"literal","value":"add_dir"},{"type":"literal","value":"remove_dir"},{"type":"literal","value":"update_directory"}]}}],"groups":[{"title":"Properties","children":[189,190,188,187,186]}]},{"id":310,"name":"PreviewScriptAPI","kind":256,"kindString":"Interface","flags":{},"children":[{"id":311,"name":"storage","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Storage API for preview scripts."}]},"type":{"type":"reference","id":322,"name":"PreviewScriptStorageAPI"}},{"id":312,"name":"broadcast","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":313,"name":"broadcast","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Send a message to all preview scripts."}]},"parameters":[{"id":314,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to sent."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":315,"name":"on","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":316,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`message`"},{"kind":"text","text":" events, emitted when a preview script calls "},{"kind":"code","text":"`postMessage`"},{"kind":"text","text":"."}]},"parameters":[{"id":317,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"message"}},{"id":318,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":319,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":320,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":321,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}}]}],"groups":[{"title":"Properties","children":[311]},{"title":"Methods","children":[312,315]}]},{"id":440,"name":"PreviewScriptEvent","kind":256,"kindString":"Interface","flags":{},"children":[{"id":441,"name":"data","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Properties","children":[441]}]},{"id":393,"name":"PreviewScriptOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":396,"name":"async","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":395,"name":"defer","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":394,"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":"module"},{"type":"literal","value":"importmap"}]}}],"groups":[{"title":"Properties","children":[396,395,394]}]},{"id":322,"name":"PreviewScriptStorageAPI","kind":256,"kindString":"Interface","flags":{},"children":[{"id":323,"name":"get","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":324,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Read the current value in the storage."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":328,"name":"on","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":329,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listens for "},{"kind":"code","text":"`change`"},{"kind":"text","text":" events, emitted when a preview script calls "},{"kind":"code","text":"`storage.set`"},{"kind":"text","text":"."}]},"parameters":[{"id":330,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"literal","value":"change"}},{"id":331,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":332,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":333,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":334,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","id":389,"name":"Unsubscribe"}}]},{"id":325,"name":"set","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":326,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set a shared value between all previews."}]},"parameters":[{"id":327,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to set."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[323,328,325]}]},{"id":498,"name":"ProxyOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":499,"name":"address","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":500,"name":"domains","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[499,500]}]},{"id":299,"name":"SpawnOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Options that control process spawning."}]},"children":[{"id":300,"name":"cwd","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Current working directory for the process, relative to the "},{"kind":"inline-tag","tag":"@link","text":"`workdir`","target":80},{"kind":"text","text":" of this instance (which\nyou can change when "},{"kind":"inline-tag","tag":"@link","text":"booting `WebContainer`","target":8},{"kind":"text","text":").\n\nBy default, the working directory of the spawned process is "},{"kind":"inline-tag","tag":"@link","text":"`workdir`","target":80},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":301,"name":"env","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Environment variables to set for the process."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"}},{"id":302,"name":"output","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to false, no terminal output is sent back to the process,\nand the "},{"kind":"inline-tag","tag":"@link","text":"`output`","target":288},{"kind":"text","text":" stream will never produce any chunks."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":308,"name":"stderr","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Like "},{"kind":"code","text":"`output`"},{"kind":"text","text":", but for standard error (though the default is "},{"kind":"code","text":"`false`"},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":307,"name":"stdout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Like "},{"kind":"code","text":"`output`"},{"kind":"text","text":", but for standard output (though the default is "},{"kind":"code","text":"`false`"},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":303,"name":"terminal","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size of the attached terminal."}]},"type":{"type":"reflection","declaration":{"id":304,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":305,"name":"cols","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":306,"name":"rows","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[305,306]}]}}}],"groups":[{"title":"Properties","children":[300,301,302,308,307,303]}]},{"id":446,"name":"StorageAPIWithinPreview","kind":256,"kindString":"Interface","flags":{},"children":[{"id":452,"name":"addEventListener","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":453,"name":"addEventListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add an event listener to a specific event type."}]},"parameters":[{"id":454,"name":"eventType","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Type of the event."}]},"type":{"type":"literal","value":"change"}},{"id":455,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Listener to attach for that event."}]},"type":{"type":"reference","id":442,"name":"PreviewScriptEventListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":447,"name":"get","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":448,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the current value in storage."}]},"type":{"type":"intrinsic","name":"any"}}]},{"id":456,"name":"removeEventListener","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":457,"name":"removeEventListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove an event listener to a specific event type."}]},"parameters":[{"id":458,"name":"eventType","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Type of the event."}]},"type":{"type":"literal","value":"change"}},{"id":459,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Listener to remove."}]},"type":{"type":"reference","id":442,"name":"PreviewScriptEventListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":449,"name":"set","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":450,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Store a value that is shared between all previews."}]},"parameters":[{"id":451,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Value to share, it will be structuredClone."}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[452,447,456,449]}]},{"id":341,"name":"SymlinkNode","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a symlink, see "},{"kind":"inline-tag","tag":"@link","text":"FileSystemTree","target":345},{"kind":"text","text":"."}]},"children":[{"id":342,"name":"file","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reflection","declaration":{"id":343,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":344,"name":"symlink","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The target of the symlink."}]},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[344]}]}}}],"groups":[{"title":"Properties","children":[342]}]},{"id":482,"name":"TextSearchMatch","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":483,"name":"preview","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":485,"name":"TextSearchPreview"}},{"id":484,"name":"ranges","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":488,"name":"TextSearchRange"}}}],"groups":[{"title":"Properties","children":[483,484]}]},{"id":469,"name":"TextSearchOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":478,"name":"caseSensitive","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":472,"name":"excludes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":470,"name":"folders","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":474,"name":"gitignore","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":476,"name":"globalIgnoreFiles","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":473,"name":"homeDir","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":480,"name":"ignoreSymlinks","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":471,"name":"includes","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":477,"name":"isRegex","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":479,"name":"isWordMatch","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":475,"name":"requireGit","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"boolean"}},{"id":481,"name":"resultLimit","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[478,472,470,474,476,473,480,471,477,479,475,481]}]},{"id":485,"name":"TextSearchPreview","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":487,"name":"matches","kind":1024,"kindString":"Property","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":488,"name":"TextSearchRange"}}},{"id":486,"name":"text","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[487,486]}]},{"id":488,"name":"TextSearchRange","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":492,"name":"endColumn","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":490,"name":"endLineNumber","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":491,"name":"startColumn","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":489,"name":"startLineNumber","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[492,490,491,489]}]},{"id":407,"name":"UncaughtExceptionMessage","kind":256,"kindString":"Interface","flags":{},"children":[{"id":409,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":410,"name":"stack","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":408,"name":"type","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":502,"name":"UncaughtException"}}],"groups":[{"title":"Properties","children":[409,410,408]}]},{"id":411,"name":"UnhandledRejectionMessage","kind":256,"kindString":"Interface","flags":{},"children":[{"id":413,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":414,"name":"stack","kind":1024,"kindString":"Property","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]}},{"id":412,"name":"type","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","id":503,"name":"UnhandledRejection"}}],"groups":[{"title":"Properties","children":[413,414,412]}]},{"id":176,"name":"WatchPathsOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"children":[{"id":179,"name":"exclude","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":184,"name":"excludeLargeContent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"id":180,"name":"gitignore","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":182,"name":"ignoreHiddenFiles","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":183,"name":"ignoreHiddenFolders","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":178,"name":"include","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":181,"name":"includeContent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":177,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[179,184,180,182,183,178,181,177]}]},{"id":426,"name":"WebContainerAPIWithinPreview","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Functions that are exposed to scripts injected in previews\nat the WebContainer API level with "},{"kind":"code","text":"`setPreviewScript`"},{"kind":"text","text":".\n\n## Example:\n\n"},{"kind":"code","text":"```ts\nimport { WebContainer, type WebContainerAPIWithinPreview } from '@webcontainer/api';\n\nconst webcontainerInstance = await WebContainer.boot();\n\nfunction previewScript(webcontainer: WebContainerAPIWithinPreview) {\n  webcontainer.addEventListener('message', (event) => {\n    const data = event.data;\n\n    // ... do something with data ...\n\n    webcontainer.postMessage(data, [transferables]);\n  });\n}\n\nwebcontainerInstance.setPreviewScript(`(${previewScript})(webcontainer)`);\n```"}]},"children":[{"id":439,"name":"storage","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Interact with the previewScript storage."}]},"type":{"type":"reference","id":446,"name":"StorageAPIWithinPreview"}},{"id":427,"name":"addEventListener","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":428,"name":"addEventListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Add an event listener to a specific event type."}]},"parameters":[{"id":429,"name":"eventType","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Type of the event."}]},"type":{"type":"literal","value":"message"}},{"id":430,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Listener to attach for that event."}]},"type":{"type":"reference","id":442,"name":"PreviewScriptEventListener"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":435,"name":"postMessage","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":436,"name":"postMessage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Send a new message to the WebContainer API receiver."}]},"parameters":[{"id":437,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Data to send."}]},"type":{"type":"intrinsic","name":"any"}},{"id":438,"name":"transferables","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array containing all object that should be transfered as part of sending the message."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Transferable","qualifiedName":"Transferable","package":"typescript"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":431,"name":"removeEventListener","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":432,"name":"removeEventListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Remove an event listener to a specific event type."}]},"parameters":[{"id":433,"name":"eventType","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Type of the event."}]},"type":{"type":"literal","value":"message"}},{"id":434,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Listener to remove."}]},"type":{"type":"reference","id":442,"name":"PreviewScriptEventListener"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[439]},{"title":"Methods","children":[427,435,431]}]},{"id":285,"name":"WebContainerProcess","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A running process spawned in a "},{"kind":"inline-tag","tag":"@link","text":"WebContainer","target":5},{"kind":"text","text":"."}]},"children":[{"id":286,"name":"exit","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A promise for the exit code of the process."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},{"id":287,"name":"input","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"An input stream for the attached pseudoterminal device."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"WritableStream","qualifiedName":"WritableStream","package":"typescript"}},{"id":288,"name":"output","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A stream that receives all terminal output, including the stdout and stderr emitted by the spawned process\n_and_ its descendants.\n\nCan be disabled by setting "},{"kind":"inline-tag","tag":"@link","text":"`output`","target":299},{"kind":"text","text":" to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"ReadableStream","qualifiedName":"ReadableStream","package":"typescript"}},{"id":298,"name":"stderr","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"ReadableStream","qualifiedName":"ReadableStream","package":"typescript"}},{"id":297,"name":"stdout","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"ReadableStream","qualifiedName":"ReadableStream","package":"typescript"}},{"id":289,"name":"kill","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":290,"name":"kill","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Kills the process."}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":291,"name":"resize","kind":2048,"kindString":"Method","flags":{},"signatures":[{"id":292,"name":"resize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resizes the attached terminal."}]},"parameters":[{"id":293,"name":"dimensions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":294,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":295,"name":"cols","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":296,"name":"rows","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[295,296]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Properties","children":[286,287,288,298,297]},{"title":"Methods","children":[289,291]}]},{"id":309,"name":"BufferEncoding","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents the character encoding options available for encoding and decoding data in Node.js buffers."}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"Buffer Documentation","target":"https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings|Node.js"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"ascii"},{"type":"literal","value":"utf8"},{"type":"literal","value":"utf-8"},{"type":"literal","value":"utf16le"},{"type":"literal","value":"ucs2"},{"type":"literal","value":"ucs-2"},{"type":"literal","value":"base64"},{"type":"literal","value":"base64url"},{"type":"literal","value":"latin1"},{"type":"literal","value":"binary"},{"type":"literal","value":"hex"}]}},{"id":419,"name":"CodeEventType","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"open"},{"type":"literal","value":"diff"}]}},{"id":164,"name":"CodeListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":165,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":166,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":167,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether a file or diff is being opened."}]},"type":{"type":"reference","id":419,"name":"CodeEventType"}},{"id":168,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A list of specified paths."}]},"type":{"type":"reference","id":420,"name":"CodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":154,"name":"ErrorListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":155,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":156,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":157,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The emitted error."}]},"type":{"type":"reflection","declaration":{"id":158,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":159,"name":"message","kind":1024,"kindString":"Property","flags":{},"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[159]}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":280,"name":"FSWatchCallback","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":281,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":282,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Callback triggered on watch events."}]},"parameters":[{"id":283,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":"rename"},{"type":"literal","value":"change"}]}},{"id":284,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":275,"name":"FSWatchOptions","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Options for configuring fs.watch."}]},"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":276,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":277,"name":"encoding","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","id":309,"name":"BufferEncoding"},{"type":"literal","value":null}]}},{"id":278,"name":"persistent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":279,"name":"recursive","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[277,278,279]}]}},{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"id":160,"name":"OpenListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":161,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":162,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":163,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The file or URL."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":139,"name":"PortListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":140,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":141,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":142,"name":"port","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The port on which the server is listening."}]},"type":{"type":"intrinsic","name":"number"}},{"id":143,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new status of the port."}]},"type":{"type":"union","types":[{"type":"literal","value":"open"},{"type":"literal","value":"close"}]}},{"id":144,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The url where the server can be accessed."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":392,"name":"PreviewMessage","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"intersection","types":[{"type":"union","types":[{"type":"reference","id":407,"name":"UncaughtExceptionMessage"},{"type":"reference","id":411,"name":"UnhandledRejectionMessage"},{"type":"reference","id":403,"name":"ConsoleErrorMessage"}]},{"type":"reference","id":397,"name":"BasePreviewMessage"}]}},{"id":150,"name":"PreviewMessageListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":151,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":152,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":153,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The message sent by a preview."}]},"type":{"type":"reference","id":392,"name":"PreviewMessage"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":442,"name":"PreviewScriptEventListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":443,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":444,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":445,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":440,"name":"PreviewScriptEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":145,"name":"ServerReadyListener","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":146,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":147,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":148,"name":"port","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The port on which the readied server is listening."}]},"type":{"type":"intrinsic","name":"number"}},{"id":149,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The url where the server can be accessed."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":493,"name":"TextSearchOnProgressCallback","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":494,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":495,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@unstableInternal","content":[]}]},"parameters":[{"id":496,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":497,"name":"matches","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":482,"name":"TextSearchMatch"}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":389,"name":"Unsubscribe","kind":4194304,"kindString":"Type alias","flags":{},"type":{"type":"reflection","declaration":{"id":390,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":391,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":4,"name":"auth","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"reference","id":348,"name":"AuthAPI"},"defaultValue":"authImpl"},{"id":1,"name":"configureAPIKey","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2,"name":"configureAPIKey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configure an API key to be used for this instance of WebContainer."}]},"parameters":[{"id":3,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"WebContainer API key."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":509,"name":"isPreviewMessage","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":510,"name":"isPreviewMessage","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":511,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"predicate","name":"data","asserts":false,"targetType":{"type":"reference","id":392,"name":"PreviewMessage"}}}]},{"id":505,"name":"reloadPreview","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":506,"name":"reloadPreview","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"This function reloads the provided iframe."}]},"parameters":[{"id":507,"name":"preview","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The iframe page to reload."}]},"type":{"type":"reference","name":"HTMLIFrameElement","qualifiedName":"HTMLIFrameElement","package":"typescript"}},{"id":508,"name":"hardRefreshTimeout","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The timeout after which the preview is reset if it hasn't responded to the reload event."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"200"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Enumerations","children":[501]},{"title":"Classes","children":[5,84]},{"title":"Interfaces","children":[348,385,381,397,134,420,422,403,169,335,415,337,460,191,345,261,272,185,310,440,393,322,498,299,446,341,482,469,485,488,407,411,176,426,285]},{"title":"Type Aliases","children":[309,419,164,154,280,275,160,139,392,150,442,145,493,389]},{"title":"Variables","children":[4]},{"title":"Functions","children":[1,509,505]}]}